<!DOCTYPE html>
<html lang="ja">

<head>
  <%- include('./common_head') %>
  <style>
    iframe.ws_status {
      width: 100%;
      height: 2em;
      border-width: 0px;
      margin-top: 1em;
    }
  </style>
</head>

<body>
  <%- include('./common_header') %>
  <div class="container-fluid">
    <div class="row">
      <%- include('./common_nav') %>
      <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
        <div class="pt-3 pb-2 mb-3">
          <h1 class="h2 pb-2 border-bottom">
            <%= system_name %>
          </h1>

          <div class="mt-3">
            <p>WebSocket 接続状態: <span id="ws_conn_status" class="">-</span></p>
          </div>

          <dl class="mt-3">
            <dt class="mb-2">
              <a href="/admin/apitoken">
                <span data-feather="key"></span>
                API トークン設定
              </a>
            </dt>
            <dd>
              <p>クラウドに接続するために必要な API トークンを設定します。</p>
              <% if (!api_token) { %>
              <p style="color:#ee0000">API トークンが未設定です。</p>
              <% } else { %>
              <p>API トークン： <code><%= api_token %></code></p>
              <% } %>
            </dd>

            <dt class="mb-2">
              <a href="/admin/devicelist">
                <span data-feather="list"></span>
                デバイス管理
              </a>
            </dt>
            <dd>
              <p>WebSocket のデータ送受信、エラーなどのシステムログをリアルタイムにモニタリングできます。</p>
            </dd>

            <dt class="mb-2">
              <a href="/admin/accesscode">
                <span data-feather="lock"></span>
                アクセスコード管理
              </a>
            </dt>
            <dd>
              <p>4 桁の数字によってアクセス制限を行います。</p>
              <p>現在の設定コード： <code><%= access_code %></code></p>
            </dd>

            <dt class="mb-2">
              <a href="/admin/systemlogs/monitor">
                <span data-feather="monitor"></span>
                システムログモニター
              </a>
            </dt>
            <dd>
              <p>WebSocket のデータ送受信、エラーなどのシステムログをリアルタイムにモニタリングできます。</p>
            </dd>

            <dt class="mb-2">
              <a href="/admin/systemlogs">
                <span data-feather="file-text"></span>
                システムログ管理
              </a>
            </dt>
            <dd>
              <p>WebSocket のデータ送受信、エラーなどのシステムログのファイルを閲覧またはダウンロードすることができます。</p>
            </dd>
          </dl>
        </div>
      </main>
    </div>
  </div>
  <%- include('./common_footer') %>

  <script>

    (async function getWsStatus() {
      const ws_status_el = document.getElementById('ws_conn_status');
      try {
        const res = await fetch('/admin/api/ws_status');
        const data = await res.json();
        ws_status_el.classList.remove('text-success');
        ws_status_el.classList.remove('text-danger');
        if (data.connected === true) {
          ws_status_el.textContent = '接続中';
          ws_status_el.classList.add('text-success');
        } else {
          ws_status_el.textContent = data.message;
          ws_status_el.classList.add('text-danger');
        }
      } catch (error) {
        // Do nothing
      }
      await wait(10000);
      getWsStatus();
    })();

    function wait(msec) {
      return new Promise((resolve) => {
        window.setTimeout(() => {
          resolve();
        }, msec);
      });
    }
  </script>
</body>

</html>